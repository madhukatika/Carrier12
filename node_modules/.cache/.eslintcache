[{"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\index.js":"1","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\App.js":"2","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\reportWebVitals.js":"3","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\SearchData\\index.js":"4","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\Displaytable.js":"5","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\charts\\index.js":"6","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\Datepicker\\index.js":"7"},{"size":535,"mtime":1687323104000,"results":"8","hashOfConfig":"9"},{"size":340,"mtime":1687505276381,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1687323104000,"results":"11","hashOfConfig":"9"},{"size":8401,"mtime":1687497867170,"results":"12","hashOfConfig":"9"},{"size":1487,"mtime":1687510202998,"results":"13","hashOfConfig":"9"},{"size":2308,"mtime":1687510785110,"results":"14","hashOfConfig":"9"},{"size":1049,"mtime":1687425295246,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"cwvg6t",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\index.js",[],[],[],"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\App.js",[],[],"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\SearchData\\index.js",["39"],[],"// import React, { useState, useEffect } from \"react\";\r\n// import mergeData from \"../../json_data/merged_file.json\";\r\n// import Displaytable from \"../Displaytable\";\r\n\r\n// const SearchComponent = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Perform initial search on component mount\r\n//     performSearch(searchTerm);\r\n//   }, []); \r\n\r\n//   const handleSearch = (e) => {\r\n//     const searchTerm = e.target.value;\r\n//     setSearchTerm(searchTerm);\r\n//     performSearch(searchTerm);\r\n//   };\r\n\r\n//   // const performSearch = (term) => {\r\n//   //   // Perform search on the imported JSON data\r\n//   //   const results = mergeData.filter((item) => {\r\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//   //       console.log(\"hello\");\r\n//   //       const itemString = JSON.stringify(item).toLowerCase();\r\n//   //       return itemString.includes(term.toLowerCase());\r\n//   //   }\r\n//   //   });\r\n//   const performSearch = (term) => {\r\n//     const results = mergeData.filter((item) => {\r\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//         const { product } = item.thermostatPacket.info;\r\n//         return product.toLowerCase().includes(term.toLowerCase());\r\n//       }\r\n//     });\r\n//     setSearchResults(results);\r\n//   };\r\n  \r\n//   // const performSearch = (product) => {\r\n//   //   // Perform search on the imported JSON data\r\n//   //   const result = mergeData.find((item) => {\r\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//   //       const { product: itemProduct } = item.thermostatPacket.info;\r\n//   //       return itemProduct === product;\r\n//   //     }\r\n//   //   });\r\n//   //   console.log(result);\r\n//   //   setSearchResults(result ? [result] : []);\r\n//   // };\r\n  \r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"search-bar\"\r\n//         placeholder=\"Search-item\"\r\n//         value={searchTerm}\r\n//         onChange={handleSearch}\r\n//       />\r\n      // <table className=\"custom_table\">\r\n      //   <thead>\r\n      //     <tr>\r\n      //       <th>date</th>\r\n      //       <th>time</th>\r\n      //       <th>product</th>\r\n      //       <th>version</th>\r\n      //       <th>id</th>\r\n      //       <th>hvacMode</th>\r\n      //       <th>deadband10xF</th>\r\n      //       <th>outdoorTempLockout10xF</th>\r\n      //       <th>programMode</th>\r\n      //       <th>fanMode</th>\r\n      //       <th>numHeatStages</th>\r\n      //       <th>numCompressorStages</th>\r\n      //       <th>numHeatStages</th>\r\n      //       <th>smartSensorCnt</th>\r\n      //       <th>outdoorTemperature10xF</th>\r\n      //       <th>indoorTemperature10xF</th>\r\n      //       <th>outdoorHumidityPer</th>\r\n      //       <th>indoorHumidityPer</th>\r\n      //     </tr>\r\n      //   </thead>\r\n      //   {searchResults.map((item, index) => (\r\n      //     <Displaytable data={item} />\r\n      //   ))}\r\n      // </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import mergeData from \"../../json_data/merged_file.json\";\r\n// // import Displaytable from \"../Displaytable\";\r\n\r\n// // const SearchComponent = () => {\r\n// //   const [searchTerm, setSearchTerm] = useState(\"\");\r\n// //   const [searchResults, setSearchResults] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     // Perform initial search on component mount\r\n// //     performSearch(searchTerm);\r\n// //   }, []); \r\n\r\n// //   const handleSearch = (e) => {\r\n// //     const searchTerm = e.target.value;\r\n// //     setSearchTerm(searchTerm);\r\n// //     performSearch(searchTerm);\r\n// //   };\r\n\r\n// //   const performSearch = (term) => {\r\n// //     const results = mergeData.filter((item) => {\r\n// //       if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n// //         const { product } = item.thermostatPacket.info;\r\n// //         return product.toLowerCase().includes(term.toLowerCase());\r\n// //       }\r\n// //     });\r\n// //     setSearchResults(results);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         className=\"search-bar\"\r\n// //         placeholder=\"Search product\"\r\n// //         value={searchTerm}\r\n// //         onChange={handleSearch}\r\n// //       />\r\n// //       <table className=\"custom_table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>date</th>\r\n// //             <th>time</th>\r\n// //             <th>product</th>\r\n// //             <th>version</th>\r\n// //             <th>id</th>\r\n// //             <th>hvacMode</th>\r\n// //             <th>deadband10xF</th>\r\n// //             <th>outdoorTempLockout10xF</th>\r\n// //             <th>programMode</th>\r\n// //             <th>fanMode</th>\r\n// //             <th>numHeatStages</th>\r\n// //             <th>numCompressorStages</th>\r\n// //             <th>numHeatStages</th>\r\n// //             <th>smartSensorCnt</th>\r\n// //             <th>outdoorTemperature10xF</th>\r\n// //             <th>indoorTemperature10xF</th>\r\n// //             <th>outdoorHumidityPer</th>\r\n// //             <th>indoorHumidityPer</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {searchResults.map((item, index) => (\r\n// //             <Displaytable key={index} data={item} />\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SearchComponent;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport mergeData from \"../../json_data/merged_file.json\";\r\nimport Displaytable from \"../Displaytable\";\r\n\r\nconst SearchComponent = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  useEffect(() => {\r\n    performSearch(searchTerm, selectedDate);\r\n  }, [searchTerm, selectedDate]);\r\n\r\n  const handleSearch = (e) => {\r\n    const term = e.target.value;\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const performSearch = (term, date) => {\r\n    const results = mergeData.filter((item) => {\r\n      if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n        const { product } = item.thermostatPacket.info;\r\n\r\n        if (!date) {\r\n          // When no date is selected, include all items\r\n          return product.toLowerCase().includes(term.toLowerCase());\r\n        } else {\r\n          // When date is selected, filter by date\r\n          return (\r\n            product.toLowerCase().includes(term.toLowerCase()) &&\r\n            new Date(item.thermostatPacket.data.timestamp).toDateString() === date.toDateString()\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    setSearchResults(results);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input style={{width:'30%',height:'3vh',padding:'5px',marginBottom:'5px'}}\r\n        type=\"text\"\r\n        className=\"search-bar\"\r\n        placeholder=\"Search product\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      <DatePicker style={{width:'30%',height:'3vh'}}\r\n        selected={selectedDate}\r\n        onChange={handleDateChange}\r\n        placeholderText=\"mm/dd/yyyy\"\r\n        dateFormat=\"MM/dd/yyyy\"\r\n      />\r\n     \r\n           <table className=\"custom_table\">\r\n        <thead>\r\n          <tr>\r\n            <th>date</th>\r\n            <th>time</th>\r\n            <th>product</th>\r\n            <th>version</th>\r\n            <th>id</th>\r\n            <th>hvacMode</th>\r\n            <th>deadband10xF</th>\r\n            <th>outdoorTempLockout10xF</th>\r\n            <th>programMode</th>\r\n            <th>fanMode</th>\r\n            <th>numHeatStages</th>\r\n            <th>numCompressorStages</th>\r\n            <th>numHeatStages</th>\r\n            <th>smartSensorCnt</th>\r\n            <th>outdoorTemperature10xF</th>\r\n            <th>indoorTemperature10xF</th>\r\n            <th>outdoorHumidityPer</th>\r\n            <th>indoorHumidityPer</th>\r\n          </tr>\r\n        </thead>\r\n        {searchResults.map((item, index) => (\r\n          <Displaytable data={item} />\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchComponent;\r\n\r\n\r\n\r\n","C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\Displaytable.js",[],[],"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\charts\\index.js",[],[],"C:\\Users\\madhavi.katika\\Downloads\\carear-task-main\\carear-task-main\\src\\Components\\Datepicker\\index.js",[],[],{"ruleId":"40","severity":1,"message":"41","line":199,"column":45,"nodeType":"42","messageId":"43","endLine":199,"endColumn":47},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]