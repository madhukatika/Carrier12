{"ast":null,"code":"// import React, { useEffect, useRef } from 'react';\n// import { Chart, LinearScale, BarController, CategoryScale } from 'chart.js';\n\n// const ChartComponent = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const ctx = chartRef.current.getContext('2d');\n//     let chartInstance = null;\n\n//     if (chartRef.current && chartRef.current.chart) {\n//       // Destroy the previous chart instance\n//       chartRef.current.chart.destroy();\n//     }\n\n//     // Register required chart components\n//     Chart.register(LinearScale, BarController, CategoryScale);\n\n//     // Create a new Chart.js chart instance\n//     chartInstance = new Chart(ctx, {\n//       type: 'bar',\n//       data: {\n//         labels: ['Label 1', 'Label 2', 'Label 3'],\n//         datasets: [\n//           {\n//             label: 'Dataset 1',\n//             data: [10, 20, 30],\n//             backgroundColor: 'rgba(0, 123, 255, 0.5)',\n//             borderColor: 'rgba(0, 123, 255, 1)',\n//             borderWidth: 1,\n//           },\n//         ],\n//       },\n//       options: {\n//         responsive: true,\n//         maintainAspectRatio: false,\n//       },\n//     });\n\n//     // Store the chart instance in the ref\n//     chartRef.current.chart = chartInstance;\n\n//     // Cleanup on component unmount\n//     return () => {\n//       if (chartRef.current && chartRef.current.chart) {\n//         // Destroy the chart instance\n//         chartRef.current.chart.destroy();\n//       }\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default ChartComponent;\nimport { generateCategoricalChart } from './generateCategoricalChart';\nimport { Line } from '../cartesian/Line';\nimport { XAxis } from '../cartesian/XAxis';\nimport { YAxis } from '../cartesian/YAxis';\nimport { formatAxisMap } from '../util/CartesianUtils';\nexport const LineChart = generateCategoricalChart({\n  chartName: 'LineChart',\n  GraphicalChild: Line,\n  axisComponents: [{\n    axisType: 'xAxis',\n    AxisComp: XAxis\n  }, {\n    axisType: 'yAxis',\n    AxisComp: YAxis\n  }],\n  formatAxisMap\n});","map":{"version":3,"names":["generateCategoricalChart","Line","XAxis","YAxis","formatAxisMap","LineChart","chartName","GraphicalChild","axisComponents","axisType","AxisComp"],"sources":["C:/Users/madhavi.katika/Downloads/carear-task-main/carear-task-main/src/Components/charts/index.js"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\r\n// import { Chart, LinearScale, BarController, CategoryScale } from 'chart.js';\r\n\r\n// const ChartComponent = () => {\r\n//   const chartRef = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const ctx = chartRef.current.getContext('2d');\r\n//     let chartInstance = null;\r\n\r\n//     if (chartRef.current && chartRef.current.chart) {\r\n//       // Destroy the previous chart instance\r\n//       chartRef.current.chart.destroy();\r\n//     }\r\n\r\n//     // Register required chart components\r\n//     Chart.register(LinearScale, BarController, CategoryScale);\r\n\r\n//     // Create a new Chart.js chart instance\r\n//     chartInstance = new Chart(ctx, {\r\n//       type: 'bar',\r\n//       data: {\r\n//         labels: ['Label 1', 'Label 2', 'Label 3'],\r\n//         datasets: [\r\n//           {\r\n//             label: 'Dataset 1',\r\n//             data: [10, 20, 30],\r\n//             backgroundColor: 'rgba(0, 123, 255, 0.5)',\r\n//             borderColor: 'rgba(0, 123, 255, 1)',\r\n//             borderWidth: 1,\r\n//           },\r\n//         ],\r\n//       },\r\n//       options: {\r\n//         responsive: true,\r\n//         maintainAspectRatio: false,\r\n//       },\r\n//     });\r\n\r\n//     // Store the chart instance in the ref\r\n//     chartRef.current.chart = chartInstance;\r\n\r\n//     // Cleanup on component unmount\r\n//     return () => {\r\n//       if (chartRef.current && chartRef.current.chart) {\r\n//         // Destroy the chart instance\r\n//         chartRef.current.chart.destroy();\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   return <canvas ref={chartRef} />;\r\n// };\r\n\r\n// export default ChartComponent;\r\nimport { generateCategoricalChart } from './generateCategoricalChart';\r\nimport { Line } from '../cartesian/Line';\r\nimport { XAxis } from '../cartesian/XAxis';\r\nimport { YAxis } from '../cartesian/YAxis';\r\nimport { formatAxisMap } from '../util/CartesianUtils';\r\n\r\nexport const LineChart = generateCategoricalChart({\r\n  chartName: 'LineChart',\r\n  GraphicalChild: Line,\r\n  axisComponents: [\r\n    { axisType: 'xAxis', AxisComp: XAxis },\r\n    { axisType: 'yAxis', AxisComp: YAxis },\r\n  ],\r\n  formatAxisMap,\r\n});\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,SAASA,wBAAwB,QAAQ,4BAA4B;AACrE,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,aAAa,QAAQ,wBAAwB;AAEtD,OAAO,MAAMC,SAAS,GAAGL,wBAAwB,CAAC;EAChDM,SAAS,EAAE,WAAW;EACtBC,cAAc,EAAEN,IAAI;EACpBO,cAAc,EAAE,CACd;IAAEC,QAAQ,EAAE,OAAO;IAAEC,QAAQ,EAAER;EAAM,CAAC,EACtC;IAAEO,QAAQ,EAAE,OAAO;IAAEC,QAAQ,EAAEP;EAAM,CAAC,CACvC;EACDC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}