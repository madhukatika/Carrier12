{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n\n// const SearchComponent = () => {\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     // Perform initial search on component mount\n//     performSearch(searchTerm);\n//   }, []); \n\n//   const handleSearch = (e) => {\n//     const searchTerm = e.target.value;\n//     setSearchTerm(searchTerm);\n//     performSearch(searchTerm);\n//   };\n\n//   // const performSearch = (term) => {\n//   //   // Perform search on the imported JSON data\n//   //   const results = mergeData.filter((item) => {\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\n//   //       console.log(\"hello\");\n//   //       const itemString = JSON.stringify(item).toLowerCase();\n//   //       return itemString.includes(term.toLowerCase());\n//   //   }\n//   //   });\n//   const performSearch = (term) => {\n//     const results = mergeData.filter((item) => {\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\n//         const { product } = item.thermostatPacket.info;\n//         return product.toLowerCase().includes(term.toLowerCase());\n//       }\n//     });\n//     setSearchResults(results);\n//   };\n\n//   // const performSearch = (product) => {\n//   //   // Perform search on the imported JSON data\n//   //   const result = mergeData.find((item) => {\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\n//   //       const { product: itemProduct } = item.thermostatPacket.info;\n//   //       return itemProduct === product;\n//   //     }\n//   //   });\n//   //   console.log(result);\n//   //   setSearchResults(result ? [result] : []);\n//   // };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search-item\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n// <table className=\"custom_table\">\n//   <thead>\n//     <tr>\n//       <th>date</th>\n//       <th>time</th>\n//       <th>product</th>\n//       <th>version</th>\n//       <th>id</th>\n//       <th>hvacMode</th>\n//       <th>deadband10xF</th>\n//       <th>outdoorTempLockout10xF</th>\n//       <th>programMode</th>\n//       <th>fanMode</th>\n//       <th>numHeatStages</th>\n//       <th>numCompressorStages</th>\n//       <th>numHeatStages</th>\n//       <th>smartSensorCnt</th>\n//       <th>outdoorTemperature10xF</th>\n//       <th>indoorTemperature10xF</th>\n//       <th>outdoorHumidityPer</th>\n//       <th>indoorHumidityPer</th>\n//     </tr>\n//   </thead>\n//   {searchResults.map((item, index) => (\n//     <Displaytable data={item} />\n//   ))}\n// </table>\n//     </div>\n//   );\n// };\n\n// export default SearchComponent;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import mergeData from \"../../json_data/merged_file.json\";\n// // import Displaytable from \"../Displaytable\";\n\n// // const SearchComponent = () => {\n// //   const [searchTerm, setSearchTerm] = useState(\"\");\n// //   const [searchResults, setSearchResults] = useState([]);\n\n// //   useEffect(() => {\n// //     // Perform initial search on component mount\n// //     performSearch(searchTerm);\n// //   }, []); \n\n// //   const handleSearch = (e) => {\n// //     const searchTerm = e.target.value;\n// //     setSearchTerm(searchTerm);\n// //     performSearch(searchTerm);\n// //   };\n\n// //   const performSearch = (term) => {\n// //     const results = mergeData.filter((item) => {\n// //       if (item.hasOwnProperty(\"thermostatPacket\")) {\n// //         const { product } = item.thermostatPacket.info;\n// //         return product.toLowerCase().includes(term.toLowerCase());\n// //       }\n// //     });\n// //     setSearchResults(results);\n// //   };\n\n// //   return (\n// //     <div>\n// //       <input\n// //         type=\"text\"\n// //         className=\"search-bar\"\n// //         placeholder=\"Search product\"\n// //         value={searchTerm}\n// //         onChange={handleSearch}\n// //       />\n// //       <table className=\"custom_table\">\n// //         <thead>\n// //           <tr>\n// //             <th>date</th>\n// //             <th>time</th>\n// //             <th>product</th>\n// //             <th>version</th>\n// //             <th>id</th>\n// //             <th>hvacMode</th>\n// //             <th>deadband10xF</th>\n// //             <th>outdoorTempLockout10xF</th>\n// //             <th>programMode</th>\n// //             <th>fanMode</th>\n// //             <th>numHeatStages</th>\n// //             <th>numCompressorStages</th>\n// //             <th>numHeatStages</th>\n// //             <th>smartSensorCnt</th>\n// //             <th>outdoorTemperature10xF</th>\n// //             <th>indoorTemperature10xF</th>\n// //             <th>outdoorHumidityPer</th>\n// //             <th>indoorHumidityPer</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {searchResults.map((item, index) => (\n// //             <Displaytable key={index} data={item} />\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // export default SearchComponent;\n\n// import React, { useState, useEffect } from \"react\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import mergeData from \"../../json_data/merged_file.json\";\n// import Displaytable from \"../Displaytable\";\n\n// const SearchComponent = () => {\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [searchResults, setSearchResults] = useState([]);\n\n//   useEffect(() => {\n//     performSearch(searchTerm, selectedDate);\n//   }, [searchTerm, selectedDate]);\n\n//   const handleSearch = (e) => {\n//     const term = e.target.value;\n//     setSearchTerm(term);\n//   };\n\n//   const handleDateChange = (date) => {\n//     setSelectedDate(date);\n//   };\n\n//   const performSearch = (term, date) => {\n//     const results = mergeData.filter((item) => {\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\n//         const { product } = item.thermostatPacket.info;\n\n//         if (!date) {\n//           // When no date is selected, include all items\n//           return product.toLowerCase().includes(term.toLowerCase());\n//         } else {\n//           // When date is selected, filter by date\n//           return (\n//             product.toLowerCase().includes(term.toLowerCase()) &&\n//             new Date(item.thermostatPacket.data.timestamp).toDateString() === date.toDateString()\n//           );\n//         }\n//       }\n//     });\n\n//     setSearchResults(results);\n//   };\n\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         className=\"search-bar\"\n//         placeholder=\"Search product\"\n//         value={searchTerm}\n//         onChange={handleSearch}\n//       />\n//       <DatePicker\n//         selected={selectedDate}\n//         onChange={handleDateChange}\n//         placeholderText=\"mm/dd/yyyy\"\n//         dateFormat=\"MM/dd/yyyy\"\n//       />\n\n//            <table className=\"custom_table\">\n//         <thead>\n//           <tr>\n//             <th>date</th>\n//             <th>time</th>\n//             <th>product</th>\n//             <th>version</th>\n//             <th>id</th>\n//             <th>hvacMode</th>\n//             <th>deadband10xF</th>\n//             <th>outdoorTempLockout10xF</th>\n//             <th>programMode</th>\n//             <th>fanMode</th>\n//             <th>numHeatStages</th>\n//             <th>numCompressorStages</th>\n//             <th>numHeatStages</th>\n//             <th>smartSensorCnt</th>\n//             <th>outdoorTemperature10xF</th>\n//             <th>indoorTemperature10xF</th>\n//             <th>outdoorHumidityPer</th>\n//             <th>indoorHumidityPer</th>\n//           </tr>\n//         </thead>\n//         {searchResults.map((item, index) => (\n//           <Displaytable data={item} />\n//         ))}\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default SearchComponent;","map":{"version":3,"names":[],"sources":["C:/Users/madhavi.katika/Downloads/carear-task-main/carear-task-main/src/Components/SearchData/index.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import mergeData from \"../../json_data/merged_file.json\";\r\n// import Displaytable from \"../Displaytable\";\r\n\r\n// const SearchComponent = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Perform initial search on component mount\r\n//     performSearch(searchTerm);\r\n//   }, []); \r\n\r\n//   const handleSearch = (e) => {\r\n//     const searchTerm = e.target.value;\r\n//     setSearchTerm(searchTerm);\r\n//     performSearch(searchTerm);\r\n//   };\r\n\r\n//   // const performSearch = (term) => {\r\n//   //   // Perform search on the imported JSON data\r\n//   //   const results = mergeData.filter((item) => {\r\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//   //       console.log(\"hello\");\r\n//   //       const itemString = JSON.stringify(item).toLowerCase();\r\n//   //       return itemString.includes(term.toLowerCase());\r\n//   //   }\r\n//   //   });\r\n//   const performSearch = (term) => {\r\n//     const results = mergeData.filter((item) => {\r\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//         const { product } = item.thermostatPacket.info;\r\n//         return product.toLowerCase().includes(term.toLowerCase());\r\n//       }\r\n//     });\r\n//     setSearchResults(results);\r\n//   };\r\n  \r\n//   // const performSearch = (product) => {\r\n//   //   // Perform search on the imported JSON data\r\n//   //   const result = mergeData.find((item) => {\r\n//   //     if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//   //       const { product: itemProduct } = item.thermostatPacket.info;\r\n//   //       return itemProduct === product;\r\n//   //     }\r\n//   //   });\r\n//   //   console.log(result);\r\n//   //   setSearchResults(result ? [result] : []);\r\n//   // };\r\n  \r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"search-bar\"\r\n//         placeholder=\"Search-item\"\r\n//         value={searchTerm}\r\n//         onChange={handleSearch}\r\n//       />\r\n      // <table className=\"custom_table\">\r\n      //   <thead>\r\n      //     <tr>\r\n      //       <th>date</th>\r\n      //       <th>time</th>\r\n      //       <th>product</th>\r\n      //       <th>version</th>\r\n      //       <th>id</th>\r\n      //       <th>hvacMode</th>\r\n      //       <th>deadband10xF</th>\r\n      //       <th>outdoorTempLockout10xF</th>\r\n      //       <th>programMode</th>\r\n      //       <th>fanMode</th>\r\n      //       <th>numHeatStages</th>\r\n      //       <th>numCompressorStages</th>\r\n      //       <th>numHeatStages</th>\r\n      //       <th>smartSensorCnt</th>\r\n      //       <th>outdoorTemperature10xF</th>\r\n      //       <th>indoorTemperature10xF</th>\r\n      //       <th>outdoorHumidityPer</th>\r\n      //       <th>indoorHumidityPer</th>\r\n      //     </tr>\r\n      //   </thead>\r\n      //   {searchResults.map((item, index) => (\r\n      //     <Displaytable data={item} />\r\n      //   ))}\r\n      // </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchComponent;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// // import React, { useState, useEffect } from \"react\";\r\n// // import mergeData from \"../../json_data/merged_file.json\";\r\n// // import Displaytable from \"../Displaytable\";\r\n\r\n// // const SearchComponent = () => {\r\n// //   const [searchTerm, setSearchTerm] = useState(\"\");\r\n// //   const [searchResults, setSearchResults] = useState([]);\r\n\r\n// //   useEffect(() => {\r\n// //     // Perform initial search on component mount\r\n// //     performSearch(searchTerm);\r\n// //   }, []); \r\n\r\n// //   const handleSearch = (e) => {\r\n// //     const searchTerm = e.target.value;\r\n// //     setSearchTerm(searchTerm);\r\n// //     performSearch(searchTerm);\r\n// //   };\r\n\r\n// //   const performSearch = (term) => {\r\n// //     const results = mergeData.filter((item) => {\r\n// //       if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n// //         const { product } = item.thermostatPacket.info;\r\n// //         return product.toLowerCase().includes(term.toLowerCase());\r\n// //       }\r\n// //     });\r\n// //     setSearchResults(results);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div>\r\n// //       <input\r\n// //         type=\"text\"\r\n// //         className=\"search-bar\"\r\n// //         placeholder=\"Search product\"\r\n// //         value={searchTerm}\r\n// //         onChange={handleSearch}\r\n// //       />\r\n// //       <table className=\"custom_table\">\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>date</th>\r\n// //             <th>time</th>\r\n// //             <th>product</th>\r\n// //             <th>version</th>\r\n// //             <th>id</th>\r\n// //             <th>hvacMode</th>\r\n// //             <th>deadband10xF</th>\r\n// //             <th>outdoorTempLockout10xF</th>\r\n// //             <th>programMode</th>\r\n// //             <th>fanMode</th>\r\n// //             <th>numHeatStages</th>\r\n// //             <th>numCompressorStages</th>\r\n// //             <th>numHeatStages</th>\r\n// //             <th>smartSensorCnt</th>\r\n// //             <th>outdoorTemperature10xF</th>\r\n// //             <th>indoorTemperature10xF</th>\r\n// //             <th>outdoorHumidityPer</th>\r\n// //             <th>indoorHumidityPer</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {searchResults.map((item, index) => (\r\n// //             <Displaytable key={index} data={item} />\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default SearchComponent;\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import DatePicker from \"react-datepicker\";\r\n// import \"react-datepicker/dist/react-datepicker.css\";\r\n// import mergeData from \"../../json_data/merged_file.json\";\r\n// import Displaytable from \"../Displaytable\";\r\n\r\n// const SearchComponent = () => {\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [searchResults, setSearchResults] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     performSearch(searchTerm, selectedDate);\r\n//   }, [searchTerm, selectedDate]);\r\n\r\n//   const handleSearch = (e) => {\r\n//     const term = e.target.value;\r\n//     setSearchTerm(term);\r\n//   };\r\n\r\n//   const handleDateChange = (date) => {\r\n//     setSelectedDate(date);\r\n//   };\r\n\r\n//   const performSearch = (term, date) => {\r\n//     const results = mergeData.filter((item) => {\r\n//       if (item.hasOwnProperty(\"thermostatPacket\")) {\r\n//         const { product } = item.thermostatPacket.info;\r\n\r\n//         if (!date) {\r\n//           // When no date is selected, include all items\r\n//           return product.toLowerCase().includes(term.toLowerCase());\r\n//         } else {\r\n//           // When date is selected, filter by date\r\n//           return (\r\n//             product.toLowerCase().includes(term.toLowerCase()) &&\r\n//             new Date(item.thermostatPacket.data.timestamp).toDateString() === date.toDateString()\r\n//           );\r\n//         }\r\n//       }\r\n//     });\r\n\r\n//     setSearchResults(results);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"search-bar\"\r\n//         placeholder=\"Search product\"\r\n//         value={searchTerm}\r\n//         onChange={handleSearch}\r\n//       />\r\n//       <DatePicker\r\n//         selected={selectedDate}\r\n//         onChange={handleDateChange}\r\n//         placeholderText=\"mm/dd/yyyy\"\r\n//         dateFormat=\"MM/dd/yyyy\"\r\n//       />\r\n     \r\n//            <table className=\"custom_table\">\r\n//         <thead>\r\n//           <tr>\r\n//             <th>date</th>\r\n//             <th>time</th>\r\n//             <th>product</th>\r\n//             <th>version</th>\r\n//             <th>id</th>\r\n//             <th>hvacMode</th>\r\n//             <th>deadband10xF</th>\r\n//             <th>outdoorTempLockout10xF</th>\r\n//             <th>programMode</th>\r\n//             <th>fanMode</th>\r\n//             <th>numHeatStages</th>\r\n//             <th>numCompressorStages</th>\r\n//             <th>numHeatStages</th>\r\n//             <th>smartSensorCnt</th>\r\n//             <th>outdoorTemperature10xF</th>\r\n//             <th>indoorTemperature10xF</th>\r\n//             <th>outdoorHumidityPer</th>\r\n//             <th>indoorHumidityPer</th>\r\n//           </tr>\r\n//         </thead>\r\n//         {searchResults.map((item, index) => (\r\n//           <Displaytable data={item} />\r\n//         ))}\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SearchComponent;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACN;AACA;AACA;;AAEA;;AASA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}