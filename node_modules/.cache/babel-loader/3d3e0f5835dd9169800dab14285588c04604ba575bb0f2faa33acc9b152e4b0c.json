{"ast":null,"code":"/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\n\"use strict\";\n\nexports[\"default\"] = Compiler;\nfunction Compiler(locales, formats, pluralFn) {\n  this.locales = locales;\n  this.formats = formats;\n  this.pluralFn = pluralFn;\n}\nCompiler.prototype.compile = function (ast) {\n  this.pluralStack = [];\n  this.currentPlural = null;\n  this.pluralNumberFormat = null;\n  return this.compileMessage(ast);\n};\nCompiler.prototype.compileMessage = function (ast) {\n  if (!(ast && ast.type === 'messageFormatPattern')) {\n    throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n  }\n  var elements = ast.elements,\n    pattern = [];\n  var i, len, element;\n  for (i = 0, len = elements.length; i < len; i += 1) {\n    element = elements[i];\n    switch (element.type) {\n      case 'messageTextElement':\n        pattern.push(this.compileMessageText(element));\n        break;\n      case 'argumentElement':\n        pattern.push(this.compileArgument(element));\n        break;\n      default:\n        throw new Error('Message element does not have a valid type');\n    }\n  }\n  return pattern;\n};\nCompiler.prototype.compileMessageText = function (element) {\n  // When this `element` is part of plural sub-pattern and its value contains\n  // an unescaped '#', use a `PluralOffsetString` helper to properly output\n  // the number with the correct offset in the string.\n  if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n    // Create a cache a NumberFormat instance that can be reused for any\n    // PluralOffsetString instance in this message.\n    if (!this.pluralNumberFormat) {\n      this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n    }\n    return new PluralOffsetString(this.currentPlural.id, this.currentPlural.format.offset, this.pluralNumberFormat, element.value);\n  }\n\n  // Unescape the escaped '#'s in the message text.\n  return element.value.replace(/\\\\#/g, '#');\n};\nCompiler.prototype.compileArgument = function (element) {\n  var format = element.format;\n  if (!format) {\n    return new StringFormat(element.id);\n  }\n  var formats = this.formats,\n    locales = this.locales,\n    pluralFn = this.pluralFn,\n    options;\n  switch (format.type) {\n    case 'numberFormat':\n      options = formats.number[format.style];\n      return {\n        id: element.id,\n        format: new Intl.NumberFormat(locales, options).format\n      };\n    case 'dateFormat':\n      options = formats.date[format.style];\n      return {\n        id: element.id,\n        format: new Intl.DateTimeFormat(locales, options).format\n      };\n    case 'timeFormat':\n      options = formats.time[format.style];\n      return {\n        id: element.id,\n        format: new Intl.DateTimeFormat(locales, options).format\n      };\n    case 'pluralFormat':\n      options = this.compileOptions(element);\n      return new PluralFormat(element.id, format.ordinal, format.offset, options, pluralFn);\n    case 'selectFormat':\n      options = this.compileOptions(element);\n      return new SelectFormat(element.id, options);\n    default:\n      throw new Error('Message element does not have a valid format type');\n  }\n};\nCompiler.prototype.compileOptions = function (element) {\n  var format = element.format,\n    options = format.options,\n    optionsHash = {};\n\n  // Save the current plural element, if any, then set it to a new value when\n  // compiling the options sub-patterns. This conforms the spec's algorithm\n  // for handling `\"#\"` syntax in message text.\n  this.pluralStack.push(this.currentPlural);\n  this.currentPlural = format.type === 'pluralFormat' ? element : null;\n  var i, len, option;\n  for (i = 0, len = options.length; i < len; i += 1) {\n    option = options[i];\n\n    // Compile the sub-pattern and save it under the options's selector.\n    optionsHash[option.selector] = this.compileMessage(option.value);\n  }\n\n  // Pop the plural stack to put back the original current plural value.\n  this.currentPlural = this.pluralStack.pop();\n  return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n  this.id = id;\n}\nStringFormat.prototype.format = function (value) {\n  if (!value && typeof value !== 'number') {\n    return '';\n  }\n  return typeof value === 'string' ? value : String(value);\n};\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n  this.id = id;\n  this.useOrdinal = useOrdinal;\n  this.offset = offset;\n  this.options = options;\n  this.pluralFn = pluralFn;\n}\nPluralFormat.prototype.getOption = function (value) {\n  var options = this.options;\n  var option = options['=' + value] || options[this.pluralFn(value - this.offset, this.useOrdinal)];\n  return option || options.other;\n};\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n  this.id = id;\n  this.offset = offset;\n  this.numberFormat = numberFormat;\n  this.string = string;\n}\nPluralOffsetString.prototype.format = function (value) {\n  var number = this.numberFormat.format(value - this.offset);\n  return this.string.replace(/(^|[^\\\\])#/g, '$1' + number).replace(/\\\\#/g, '#');\n};\nfunction SelectFormat(id, options) {\n  this.id = id;\n  this.options = options;\n}\nSelectFormat.prototype.getOption = function (value) {\n  var options = this.options;\n  return options[value] || options.other;\n};","map":{"version":3,"names":["Compiler","locales","formats","pluralFn","prototype","compile","ast","pluralStack","currentPlural","pluralNumberFormat","compileMessage","type","Error","elements","pattern","i","len","element","length","push","compileMessageText","compileArgument","test","value","Intl","NumberFormat","PluralOffsetString","id","format","offset","replace","StringFormat","options","number","style","date","DateTimeFormat","time","compileOptions","PluralFormat","ordinal","SelectFormat","optionsHash","option","selector","pop","String","useOrdinal","getOption","other","numberFormat","string"],"sources":["\\src\\compiler.js"],"sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(\n                element.id, format.ordinal, format.offset, options, pluralFn\n            );\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conforms the spec's algorithm\n    // for handling `\"#\"` syntax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original current plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value && typeof value !== 'number') {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n    this.id         = id;\n    this.useOrdinal = useOrdinal;\n    this.offset     = offset;\n    this.options    = options;\n    this.pluralFn   = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}